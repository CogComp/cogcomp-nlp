* v1.7.9
  - What's new
    * Refactored Edison to contain only the feature extaction components
    * All datastructure-related classes are now part of illinois-core-utilities
    * All Curator-related classes are now part of illinois-caching-curator
  - Bugfixes
    * Fixed test resource generation issues (Curator)

* v0.7.8
  - Fixed a bug with token offset identification, added
    testTokenization to TestTextAnnotation.
    
* v0.7.8-SNAPSHOT
  - What's new
    * Changed behavior of Constituent instantiation with automatic char offset determination. Previous behavior
      seemed to assume one-past-the-end token indexing, but actual use indicated this was not always correct.
    * removed dependency tree hack for trying to determine whether tree token indexes were sentence-relative
      or absolute on-the-fly. There hacky method is now present but not used; current version assumes
      offsets are always *absolute*. 

* v0.7.5
  - What's new
    * Added SRL annotation readers (moved from illinois-srl)

* v0.7.4
  - What's new
    * Added STANFORD_PARSE based governor/object feature extractors (duplicated from Charniak)
    * Added LEMMA view in the list of views converted from a Curator Record

* v0.7.3
  - Bugfixes
    * Fixed currency gazetteer path
    * Fixed possible bug in coref view

* v0.7.2
  - Bugfixes
    * PennTreebankReader now ignores non-directory files (reads only WSJ sections)

* v0.7.1
  - Bugfixes
    * Removed getConstiteuntRelativeToSentenceStart from TreeView to fix the problems with brackets
    * Prop/NomFramesReader loads from local resources are well as classpath
    * Synchronization problem in TextAnnotation.getSpansMatching()

* v0.7
  - What's new
    * TextAnnotation is now fully Serializable
    * Removed dependency on Nombank frames. Instead, added a single
      file that contains all the nominalized lemmas.
  - Bugfixes
    * Fixed problems with the JUnit tests

* v0.6
  - What's new
    * Added a new ViewName for prepSRL, renamed SRL and NOM to SRL_VERB and SRL_NOM
    * Switched to LBJava-1.0
    * Changed to be used with illinois-common-resources
  - Bugfixes
    * WSJ home directory was hardcoded to point to PTBv2

* v0.5
  - What's new 
    * A new feature input transformer that takes a constituent and
      generates features from each word within it.
    * Some changes to the clause view generator for a future
      predictor that is independent of the parse tree.
  - Bugfixes
    * An infrequently appearing bug in TreeView that could lose
      constitutes when looking for one that covers a span.

* v0.4
  - What's new
    * Using GNU Trove for primitive collections
    * Using a symbol table per TextAnnotation to avoid re-using
      strings. This change is entirely under the hood and does not
      change the external API, but gives a big performance improvement.
    * A brand new JSON serializer for TextAnnotations based on Google
      Gson
    * Significant performance improvements with GazetteerViewGenerator
    * Added new Queries sand Selectors to help traverse through
      TextAnnotation views
    * WordNetPlusLemmaViewGenerator: If the word belongs to a closed
      word class, the lemma is the lower-cased word

  - Changes to API
    * Feature values are floats, not doubles. 
  - Minor edits and bugfixes
    * CuratorDataStructureInterface: Converter from
      PredicateArgumentView to Forest now adds attributes from
      argument Constituents to the corresponding nodes in the Forest
    * CoreferenceView: Fixed bug in search for canonical entities
    * TextProcessor is not a specific instance of ProducerConsumer
      from coreUtilities
    * Bugfix with Sentence.getText
    * Other bugfixes


* v0.3
  - What's new
    * Added GazetteerViewGenerator, which can read (possibly gzipped)
      gazetteers from jar files
    * Brown clusters can now be read from the classpath
    * Added PropbankReader
    * Defined a new interface for features and feature extractors
    * Added utilities for conjoining features
    * Added several new feature extractors in the package
      edu.illinois.cs.cogcomp.features.factory. See documentation
    * Added PropBank and NomBank frame readers and a NomLex reader
    * Created class WordLists that stores small lists of words like
      variations of the verb "to be", different de-nominal suffixes
      from CYC, etc.
    * PennTreebankReader now adds POS view from gold data

  - Changes to API
    * Split Queries to Queries and Selectors. Added several new
      queries. See documentation for more details.
    * Major revamp to WordNet feature extractor for efficiency
    * Added utility functions to predicate argument view for sense and
      lemmas.
    * Moved part-of-speech functions to POSUtils. This will affect
      functions that were previously present in ParseTreeProperties.
      * Added function to check if a word is a nominalization to
        POSUtils
    * Modified toString for predicate argument view to print lemma and
      sense
    * Modified the interface of TextViewGenerators and added several
      new ViewGenerators (like clauses from parse tree, POS from
      parse)
    * Head finder now works with Edison objects instead of
      Tree<String>

  - Bugfixes
    * Changed parseutils. stripIndexReferences returns the label if it
      is the token '='
    * Fixed bug with PredicateArgumentView.toString, where calling
      toString will change the order of the arguments
    * Fixed bug with ColumnFormatWriter, to account for missing NER and
      chunk views
    * CuratorClient.addWikifierView added views called SHALLOW_PARSE
    * Fixed a rare bug with token label aligning
    * Added check for parenthesis while adding dependency trees
    * Fixed minor bug with head-finder dependency parser
    * Fixed ColumnFormatWriter. Now writes column format for multiple
      sentences.
    * Fixed curator datastructure interface to use the incoming corpus
      and text ids
    * Added double-check locks for synchronization to several classes
    * Several small bugfixes dealing with edge case scenarios


  - Miscellaneous
    * Added several new unit tests

* v0.2.9
  - Fixed bug with tokenization.